func updateMatrix(mat [][]int) [][]int {
	m, n := len(mat), len(mat[0])
	dirs := [][]int{{-1, 0}, {1, 0}, {0, -1}, {0, 1}}

	// Initialize the queue and visited matrix
	queue := [][]int{}
	visited := make([][]bool, m)
	for i := 0; i < m; i++ {
		visited[i] = make([]bool, n)
		for j := 0; j < n; j++ {
			if mat[i][j] == 0 {
				queue = append(queue, []int{i, j})
				visited[i][j] = true
			}
		}
	}

	// Start BFS
	for len(queue) > 0 {
		cell := queue[0]
		queue = queue[1:]
		for _, dir := range dirs {
			ni, nj := cell[0]+dir[0], cell[1]+dir[1]
			if ni >= 0 && ni < m && nj >= 0 && nj < n && !visited[ni][nj] {
				mat[ni][nj] = mat[cell[0]][cell[1]] + 1
				queue = append(queue, []int{ni, nj})
				visited[ni][nj] = true
			}
		}
	}

	return mat
}